#
# Date/time output configuration
#

# Define text expressions you wish to have the date/time parser 
# convert to dates. The text expression on the left side of the equal sign 
# must be *all lowercase* ; the date/time expression on the right side must
# be valid and parsable
#
expressions = {
	us civil war = 1861 to 1865,
	world war 2  = 1939 to 1945,
	nickel empire = 1920s,
	19de eeuw = 1800-1899,
	20ste eeuw = 1900-1999,
	16de eeuw = 1500-1599,
	eerste kwart 16de eeuw = 1500-1524,
	tweede kwart 16de eeuw = 1525-1549,
	derde kwart 16de eeuw = 1550-1574,
	21ste eeuw = 2000-2099,
	17de eeuw = 1600-1699,
	18de eeuw = 1700-1799,
	laatste kwart 16de eeuw = 1575-1599,
	15de eeuw = 1400-1499,
	14de eeuw = 1300-1399,
	13de eeuw = 1200-1299,
	eerste helft 20ste eeuw = 1900-1949,
	eerste kwart 20ste eeuw = 1900-1924,
	tweede kwart 20ste eeuw = 1925-1949,
	derde kwart 20ste eeuw = 1950-1974,
	laatste kwart 20ste eeuw = 1975-1999,
	tweede helft 20ste eeuw = 1950-1999,
	eerste helft 19de eeuw = 1800-1849,
	tweede helft 19de eeuw = 1850-1899,
	einde 19de - begin 20ste eeuw = 1875-1924,
	laatste kwart 14de eeuw = 1375-1399,
	eerste helft 14de eeuw = 1300-1349,
	tweede kwart 15de eeuw = 1425-1449,
	derde kwart 15de eeuw = 1450-1474,
	laatste kwart 15de eeuw = 1475-1499,
	eerste helft 16de eeuw = 1500-1549,
	tweede helft 16de eeuw = 1550-1599,
	eerste kwart 17de eeuw = 1600-1624,
	tweede kwart 17de eeuw = 1625-1649,
	derde kwart 17de eeuw = 1650-1674,
	laatste kwart 17de eeuw = 1675-1699,
	eerste helft 17 de eeuw = 1600-1649,
	tweede helft 17de eeuw = 1650-1699,
	eerste kwart 18de eeuw = 1700-1724,
	tweede kwart 18de eeuw = 1725-1749,
	derde kwart 18de eeuw = 1750-1774,
	laatste kwart 18de eeuw = 1775-1799,
	eerste helft 18de eeuw = 1700-1749,
	tweede helft 18de eeuw = 1750-1799,
	eerste kwart 19de eeuw = 1800-1824,
	tweede kwart 19de eeuw = 1825-1849,
	derde kwart 19de eeuw = 1850-1874,
	laatste kwart 19de eeuw = 1875-1899,
	einde 15de - begin 16de eeuw = 1475-1524,
	einde 16de - begin 17de eeuw = 1575-1624,
	einde 17de - begin 18de eeuw = 1675-1724,
	einde 18de - begin 19de eeuw = 1775-1824,
	einde 20ste - begin 21ste eeuw = 1975-2024,
	midden 100 = 125-174,
	midden 200 = 225-274,
	midden 300 = 325-374,
	midden 400 = 425-474,
	midden 500 = 525-574,
	midden 600 = 625-674,
	midden 700 = 725-774,
	midden 800 = 825-874,
	midden 900 = 925-974,
	midden 1000 = 1025-1074,
	midden 1100 = 1125-1174,
	midden 1200 = 1225-1274,
	midden 1300 = 1325-1374,
	midden 1400 = 1425-1474,
	midden 1500 = 1525-1574,
	midden 1600 = 1625-1674,
	midden 1700 = 1725-1774,
	midden 1800 = 1825-1874,
	midden 1900 = 1925-1974,
	midden 2000 = 2025-2074,
	midden 2de eeuw = 125-174,
	midden 3de eeuw = 225-274,
	midden 4de eeuw = 325-374,
	midden 5de eeuw = 425-474,
	midden 6de eeuw = 525-574,
	midden 7de eeuw = 625-674,
	midden 8de eeuw = 725-774,
	midden 9de eeuw = 825-874,
	midden 10de eeuw = 925-974,
	midden 11de eeuw = 1025-1074,
	midden 12de eeuw = 1125-1174,
	midden 13de eeuw = 1225-1274,
	midden 14de eeuw = 1325-1374,
	midden 15de eeuw = 1425-1474,
	midden 16de eeuw = 1525-1574,
	midden 17de eeuw = 1625-1674,
	midden 18de eeuw = 1725-1774,
	midden 19de eeuw = 1825-1874,
	midden 20ste eeuw = 1925-1974,
	eerste kwart 21ste eeuw = 2000-2024
}

#
# Output options for date/times
#

# Format to use for dates; valid values are (text|delimited|iso8601|original)	[default is text]
# "original" is the date as entered by the user; other values will normalize all date/time input
# to the selected standard format
dateFormat = original

#
# Do we output the time portion of date time expressions?
timeOmit = 0

# If set to a non-zero value commas are included after the day in a US-style (month first) text date
showCommaAfterDayForTextDates = 0

# Format to use for times; valid values are (12|24) [default is 24]
timeFormat = 24

# If true dates ranging over uniform quarter centuries (eg. 1900 - 1925, 1925 - 1950, 1950 - 1975, 1975-2000) 
# will be output in the format "20 Q1" (eg. 1st quarter of 20th century... 1900 - 1925)
useQuarterCenturySyntaxForDisplay = 0

# If true century only dates (eg "18th century") will be output in roman numerals like "XVIIIth century"
useRomanNumeralsForCenturies = 0

# Delimiter in time display; must be valid for the current language or default will be used;  [default is first delimiter in language config file]
#	timeDelimiter = :

# Text to put between times in a range; must be valid for the current language or default will be used; [default is first in lang. config]
#	timeRangeConjunction = -

# Text to place before date/times in a range; must be valid for the current language or default will be used; [default is none]
#	rangePreConjunction = 

# Text to place between date/times in a range; must be valid for the current language or default will be used; [default is first in lang. config]
#	rangeConjunction = to

# Text to place between times in a range; must be valid for the current language or default will be used; [default is first in lang. config]
#	dateTimeConjunction = -
# dateTimeConjunction = to

# If set to a non-zero value the "AD" era will be show for all dates; default is to only show it in ranges that span eraa
#	showADEra  = 0

# Text to use to indicate that a precision (eg. +/- 5 days, +/- 3 years) for the date is set; must be valid for the current language or default will be used; [default is first in lang. config]
# This is not the same as "circa" (uncertain) dates. Circa conveys the general notion that a date is not precisely known. A precision expression
# using the uncertaintyIndicator explicitly defines the uncertainty in a date numerically.
#	uncertaintyIndicator = ~

# If set to a non-zero value then empty dates will be displayed using the "undated" text for the current language. If not set then an empty string will be returned for empty dates.
showUndated = 0

# Text to place before date/times in a range; must be valid for the current language or default will be used; [default is none]
#	dateDelimiter	(string) [default is first delimiter in language config file]

# Text to place before date/times to indicate it is a "circa" (uncertain) date; must be valid for the current language or default will be used; [default is first indicator in language config file]
#	circaIndicator = circa

# Text to place before a date/time to indicate that it is no later than the specified date; must be valid for the current language or default will be used; [default is first indicator in language config file]
#	beforeQualifier	= before

# Text to place before a date/time to indicate that it is no earlier than the specified date; must be valid for the current language or default will be used; [default is first indicator in language config file]
#	afterQualifier = after

# Text that represents the current date; must be valid for the current language or default will be used; [default is first indicator in language config file]
#	presentDate = present
